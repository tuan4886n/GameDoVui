name: Deploy Flask API Infrastructure

on:
  workflow_run:
    workflows: ["Flask CI/CD"] # Run only after CI Flask API completes
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -t tuan4886/flask-api:latest .

      - name: Push Docker Image
        run: docker push tuan4886/flask-api:latest

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Create terraform.tfvars
        run: |
          echo "aws_region=\"${{ secrets.AWS_REGION }}\"" >> terraform.tfvars
          echo "instance_id=\"${{ secrets.INSTANCE_ID }}\"" >> terraform.tfvars
          echo "key_pair=\"${{ secrets.KEY_PAIR_NAME }}\"" >> terraform.tfvars
          echo "private_key=\"${{ secrets.PRIVATE_KEY }}\"" >> terraform.tfvars
        working-directory: ./terraform-ec2

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform-ec2

      - name: Terraform Apply
        run: terraform apply -auto-approve -parallelism=1
        working-directory: ./terraform-ec2
