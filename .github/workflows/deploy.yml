name: Deploy Flask API Infrastructure

on:
  workflow_run:
    workflows: ["Flask CI/CD"] # Run only after CI Flask API completes
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -t tuan4886/flask-api:latest .

      - name: Push Docker Image
        run: docker push tuan4886/flask-api:latest

      - name: Create PEM file from secret
        run: |
          echo "${{ secrets.PEM_KEY_PATH }}" > key.pem
          chmod 600 key.pem

      - name: Create .env file
        run: |
          echo "DATABASE_USER=${{ vars.DATABASE_USER }}" >> .env
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
          echo "DATABASE_HOST=${{ vars.DATABASE_HOST }}" >> .env
          echo "DATABASE_NAME=${{ vars.DATABASE_NAME }}" >> .env
          echo "DATABASE_PORT=${{ vars.DATABASE_PORT }}" >> .env
          echo "DATABASE_URL=postgresql://${{ vars.DATABASE_USER }}:${{ secrets.DATABASE_PASSWORD }}@${{ vars.DATABASE_HOST }}:${{ vars.DATABASE_PORT }}/${{ vars.DATABASE_NAME }}" >> .env

      - name: Copy docker-compose.yml and .env to EC2
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_IP }} "mkdir -p ~/flask-app"
          scp -i key.pem -o StrictHostKeyChecking=no docker-compose.yml .env ec2-user@${{ secrets.EC2_IP }}:~/flask-app/

      - name: Deploy via SSH
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_IP }} << 'EOF'
            cd ~/flask-app
            docker-compose pull
            docker-compose down
            docker-compose up -d
          EOF
